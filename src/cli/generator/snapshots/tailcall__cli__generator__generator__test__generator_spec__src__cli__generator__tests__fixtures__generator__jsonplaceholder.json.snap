---
source: src/cli/generator/generator.rs
expression: config.to_sdl()
---
schema @server @upstream(baseURL: "https://jsonplaceholder.typicode.com") {
  query: Query
}

type Address {
  city: String
  geo: GeoLocation
  street: String
  suite: String
  zipcode: String
}

type Album {
  albumId: Int
  id: Int
  thumbnailUrl: String
  title: String
  url: String
}

type Article {
  body: String
  email: String
  id: Int
  name: String
  postId: Int
}

type Company {
  bs: String
  catchPhrase: String
  name: String
}

type GeoLocation {
  lat: String
  lng: String
}

type Post {
  body: String
  id: Int
  title: String
  userId: Int
}

type Query {
  comment(p1: Int!): Article @http(path: "/comments/{{.args.p1}}")
  comments: [Article] @http(path: "/comments")
  photo(p1: Int!): Album @http(path: "/photos/{{.args.p1}}")
  photos: [Album] @http(path: "/photos")
  post(p1: Int!): Post @http(path: "/posts/{{.args.p1}}")
  postComments(postId: Int): [Article] @http(path: "/comments", query: [{key: "postId", value: "{{.args.postId}}"}])
  posts: [Post] @http(path: "/posts")
  todo(p1: Int!): Task @http(path: "/todos/{{.args.p1}}")
  todos: [Task] @http(path: "/todos")
  user(p1: Int!): User @http(path: "/users/{{.args.p1}}")
  users: [User] @http(path: "/users")
}

type Task {
  completed: Boolean
  id: Int
  title: String
  userId: Int
}

type User {
  address: Address
  company: Company
  email: String
  id: Int
  name: String
  phone: String
  username: String
  website: String
}
